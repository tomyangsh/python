#!/usr/bin/python

import sys
import requests
import re
import subprocess

from myfunc import tg, media, util

from pathlib import Path

def get_metadata(file):
    width, height, duration = 1920, 1080, 0
    try:
        video = media.Video(file)
        height = video.height
        width = video.width
        duration = video.duration
    except Exception as e:
        print(e)
    return dict(height=height, width=width, duration=duration)

def progress(current, total):
    sys.stdout.write(f"\r{current * 100 / total:.1f}%")
    sys.stdout.flush()

def encode(file):
    video = media.Video(file)
    if video.zhsub:
        subtitle = f"{str(file.absolute())}:si={next(video.sublist.index(i) for i in video.sublist if i == 'chi')}"
    else:
        subtitle = next(file.parent.glob(file.stem + '*.srt')).name
    
    subprocess.run(f"ffmpeg -hide_banner -init_hw_device vaapi -i {str(file.absolute())} -vf subtitles={subtitle}:force_style='Fontsize=20',hwupload -c:v hevc_vaapi -b:v 4000K -ac 2 {file.stem}.mp4", shell=True)

    return next(Path().glob(file.stem + '.mp4'))

def upload(file):
    with tg.client() as app:
        video_name = file.stem
        ep_no = re.search('\w\d\d\w\d\d', video_name).group().upper()
        query = re.sub('\.', ' ', re.match('([\w\.]+?)\.(\d{4}\.)?\w\d\d\w\d\d', video_name).group(1))
        res = requests.get(f'https://tomyangsh.pw/api/tmdb?keyword={query}').json()
        if res:
            res = res[0]
            name_chi = re.sub('：', '_', res.get('name'))
            name_org = re.sub('：', '_', res.get('ori_name'))
            thumbnail = util.bytesio(requests.get(res.get('backdrop')).content, 'jpg')
            caption = '#'+name_chi+' '+name_org+' '+ep_no
            print(caption)
        else:
            caption = video_name
            thumbnail = None
        meta = get_metadata(file)
        app.send_video("me", file, caption=caption, thumb=thumbnail, **meta, progress=progress)

    file.unlink()

p = Path(sys.argv[1])
if p.is_file():
    upload(encode(p))
elif p.is_dir():
    for i in sorted(p.glob('*.mkv')):
        upload(encode(i))
